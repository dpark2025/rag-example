apiVersion: v1
kind: ConfigMap
metadata:
  name: rag-system-config
  namespace: rag-system
  labels:
    app.kubernetes.io/name: rag-system
    app.kubernetes.io/component: configuration
data:
  # RAG Backend Configuration
  PYTHONPATH: "/app"
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  LOG_FORMAT: "json"
  
  # Service Discovery
  CHROMA_HOST: "chromadb-service"
  CHROMA_PORT: "8000"
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  OLLAMA_HOST: "host.docker.internal"
  OLLAMA_PORT: "11434"
  
  # Performance Configuration
  REQUEST_TIMEOUT: "30"
  QUERY_TIMEOUT: "60"
  UPLOAD_TIMEOUT: "300"
  MAX_DOCUMENT_SIZE_MB: "50"
  MAX_DOCUMENTS_PER_UPLOAD: "10"
  
  # Feature Flags
  DOCUMENT_UPLOAD_ENABLED: "true"
  PDF_PROCESSING_ENABLED: "true"
  BULK_OPERATIONS_ENABLED: "true"
  METRICS_ENABLED: "true"
  HEALTH_CHECKS_ENABLED: "true"
  
  # CORS Configuration
  CORS_CREDENTIALS: "true"
  
  # Rate Limiting
  RATE_LIMIT_ENABLED: "true"
  RATE_LIMIT_REQUESTS_PER_MINUTE: "60"
  RATE_LIMIT_BURST: "10"
  
  # Caching
  CACHE_ENABLED: "true"
  CACHE_TTL_SECONDS: "3600"
  CACHE_MAX_SIZE_MB: "512"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: rag-system
  labels:
    app.kubernetes.io/name: rag-system
    app.kubernetes.io/component: nginx
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time"';

        access_log /var/log/nginx/access.log main;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 100M;

        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;

        upstream rag-backend {
            server rag-backend-service:8000;
        }

        upstream reflex-frontend {
            server reflex-service:3000;
        }

        server {
            listen 80;
            server_name _;

            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            location / {
                limit_req zone=api burst=20 nodelay;
                
                proxy_pass http://reflex-frontend;
                proxy_http_version 1.1;
                
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location /api/ {
                limit_req zone=api burst=10 nodelay;
                
                proxy_pass http://rag-backend/;
                proxy_http_version 1.1;
                
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                proxy_connect_timeout 120s;
                proxy_send_timeout 120s;
                proxy_read_timeout 120s;
            }

            location /api/v1/documents/upload {
                limit_req zone=upload burst=5 nodelay;
                
                client_max_body_size 100M;
                client_body_timeout 300s;
                
                proxy_pass http://rag-backend/api/v1/documents/upload;
                proxy_http_version 1.1;
                
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                proxy_connect_timeout 300s;
                proxy_send_timeout 300s;
                proxy_read_timeout 300s;
                proxy_buffering off;
                proxy_request_buffering off;
            }
        }
    }