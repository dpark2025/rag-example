apiVersion: apps/v1
kind: Deployment
metadata:
  name: reflex-frontend
  namespace: rag-system
  labels:
    app.kubernetes.io/name: reflex-frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: rag-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: reflex-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: reflex-frontend
        app.kubernetes.io/component: frontend
    spec:
      containers:
      - name: reflex-frontend
        image: rag-system/reflex:latest
        ports:
        - containerPort: 3000
          name: frontend
        - containerPort: 8001
          name: backend
        env:
        - name: PYTHONPATH
          value: "/app"
        - name: REFLEX_HOST
          value: "0.0.0.0"
        - name: REFLEX_PORT
          value: "3000"
        - name: API_BASE_URL
          value: "http://rag-backend-service:8000"
        - name: OLLAMA_HOST
          valueFrom:
            configMapKeyRef:
              name: rag-system-config
              key: OLLAMA_HOST
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: rag-system-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: rag-system-config
              key: LOG_LEVEL
        volumeMounts:
        - name: document-storage
          mountPath: /app/data
          readOnly: true
        - name: logs
          mountPath: /var/log/reflex
        resources:
          requests:
            memory: "512Mi"
            cpu: "300m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /_health
            port: 3000
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /_health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
      volumes:
      - name: document-storage
        persistentVolumeClaim:
          claimName: document-pvc
      - name: logs
        emptyDir: {}
      securityContext:
        fsGroup: 1000

---
apiVersion: v1
kind: Service
metadata:
  name: reflex-service
  namespace: rag-system
  labels:
    app.kubernetes.io/name: reflex-frontend
    app.kubernetes.io/component: frontend
spec:
  selector:
    app.kubernetes.io/name: reflex-frontend
  ports:
  - name: frontend
    port: 3000
    targetPort: 3000
    protocol: TCP
  - name: backend
    port: 8001
    targetPort: 8001
    protocol: TCP
  type: ClusterIP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: reflex-frontend-hpa
  namespace: rag-system
  labels:
    app.kubernetes.io/name: reflex-frontend
    app.kubernetes.io/component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: reflex-frontend
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60