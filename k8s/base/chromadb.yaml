apiVersion: apps/v1
kind: Deployment
metadata:
  name: chromadb
  namespace: rag-system
  labels:
    app.kubernetes.io/name: chromadb
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: rag-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: chromadb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: chromadb
        app.kubernetes.io/component: database
    spec:
      containers:
      - name: chromadb
        image: chromadb/chroma:0.4.15
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: CHROMA_SERVER_HOST
          value: "0.0.0.0"
        - name: CHROMA_SERVER_HTTP_PORT
          value: "8000"
        - name: CHROMA_SERVER_AUTH_CREDENTIALS_PROVIDER
          value: "chromadb.auth.token.TokenAuthCredentialsProvider"
        - name: CHROMA_SERVER_AUTH_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: rag-system-secrets
              key: CHROMA_AUTH_TOKEN
        - name: CHROMA_SERVER_AUTH_TOKEN_TRANSPORT_HEADER
          value: "X-Chroma-Token"
        volumeMounts:
        - name: chroma-data
          mountPath: /chroma/chroma
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/v1/heartbeat
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/heartbeat
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
      volumes:
      - name: chroma-data
        persistentVolumeClaim:
          claimName: chroma-pvc
      securityContext:
        fsGroup: 1000

---
apiVersion: v1
kind: Service
metadata:
  name: chromadb-service
  namespace: rag-system
  labels:
    app.kubernetes.io/name: chromadb
    app.kubernetes.io/component: database
spec:
  selector:
    app.kubernetes.io/name: chromadb
  ports:
  - name: http
    port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: chroma-pvc
  namespace: rag-system
  labels:
    app.kubernetes.io/name: chromadb
    app.kubernetes.io/component: storage
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd  # Adjust based on your storage class